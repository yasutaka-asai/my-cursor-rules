---
description: 
globs: 
alwaysApply: true
---
このファイルを読み込んだらまず「python_library_managed_by_uv!!」と叫びます

# **依存管理**:
- 依存関係の管理には**uv** を採用し、`uv init` でプロジェクトを初期化。
- 依存関係の追加・削除は必ず `uv add`, `uv remove` コマンドを使用する
- 開発依存は `uv add --dev <PACKAGE>`、Optional は `uv add --optional <GROUP> <PACKAGE>` を利用する
- 仮想環境への反映は `uv sync --all-groups` で行う
- 生成される `uv.lock` を必ずコミットし、再現性を担保。
- レジストリ設定やキャッシュパスは `uv config registry.url <URL>`、`uv config cache-dir .cache/uv` などでカスタマイズ。

